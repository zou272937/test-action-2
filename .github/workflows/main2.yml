name: test-2-adsdsdsdssdsd

on:
  push:

jobs:
  test-1a:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.find.outputs.branch }}
    steps:
      - name: extract branch
        id: extra
        run: |
          BRANCH="${{ github.ref_name }}"
          echo "Branch: $BRANCH"
          PREFFIX=$(echo "$BRANCH" | cut -d'/' -f1)
          ISSUE_ID=$(echo "$BRANCH" | cut -d'/' -f2)
          NAME=$(echo "$BRANCH" | cut -d'/' -f3)
          SUFFIX="${ISSUE_ID}-${NAME}"
          echo "ISSUE_ID=$ISSUE_ID" >> $GITHUB_OUTPUT
          echo "NAME=$NAME" >> $GITHUB_OUTPUT
          echo "PREFFIX=$PREFFIX" >> $GITHUB_OUTPUT
          echo "SUFFIX=$SUFFIX" >> $GITHUB_OUTPUT

      # - name: list branch
      #   id: list_branch
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     curl -s -H "Authorization: token ${GITHUB_TOKEN}" https://api.github.com/repos/zou272937/test-action-1/branches > branches.json
      #     cat branches.json
      #     echo "Branches listed."
      - name: list branch
        id: list_branch
        env:
          GITHUB_TOKEN1: ${{ secrets.REUSABLE_WORKFLOW_TOKEN }}
        run: |
          curl -s -H "Authorization: token ${GITHUB_TOKEN1}" https://api.github.com/repos/zou272937/test-action-1/branches > branches.json
          cat branches.json
          echo "Branches listed."
      - name: find matching
        id: find
        run: |
          echo "${{ steps.extra.outputs.SUFFIX }}"
          echo "${{ steps.extra.outputs.PREFFIX }}"
          MATCH=$(jq -r --arg prefix "${{ steps.extra.outputs.PREFFIX }}" --arg suffix "${{ steps.extra.outputs.SUFFIX }}" '.[] | select(.name | startswith($prefix) and endswith($suffix)) | .name' branches.json)
          if [ -z "$MATCH" ]; then
            MATCH="main"
          fi
          echo "BRANCH=$MATCH" >> $GITHUB_OUTPUT
          echo "$MATCH"

      - name: clone
        id: clone
        uses: actions/checkout@v4
        with:
          repository: zou272937/test-action-1
          ref: ${{ steps.find.outputs.BRANCH }}
          token: ${{ secrets.REUSABLE_WORKFLOW_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ steps.find.outputs.BRANCH }}
      - name: test-step-3
        run: |
          echo ${GITHUB_WORKSPACE}
          ls -l
